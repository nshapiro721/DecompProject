ggplot(soils_decomp_clean_treatment, aes(y = mean_moisture))  +
geom_errorbar(aes(x = treatment, ymin = mean_moisture - std.error_mois, ymax = mean_moisture + std.error_mois, col = treatment), width = 0.15)+
geom_point(aes(x = treatment, fill = treatment, col = treatment), size = 3)
#treatment by moisture scatterplot (with error bars) *preferred
ggplot(soils_decomp_clean_treatment, aes(y = mean_moisture))  +
geom_errorbar(aes(x = treatment, ymin = mean_moisture - std.error_mois, ymax = mean_moisture + std.error_mois, col = treatment), width = 0.15)+
geom_point(aes(x = treatment, fill = treatment, col = treatment), size = 3) +
ggtitle("Average Soil Moisture \nof Each Decay Environment") +
ylab("Average Soil Moisture") +
xlab("Decay Environment") +
scale_x_discrete(labels = c("Morella", "Phragmites", "Pine")) +
scale_color_discrete(name = "Decay Environment",
labels = c("Morella", "Phragmites", "Pine"))
#treatment by moisture scatterplot (with error bars) *preferred
ggplot(soils_decomp_clean_treatment, aes(y = mean_moisture, col = treatment))  +
geom_errorbar(aes(x = treatment, ymin = mean_moisture - std.error_mois, ymax = mean_moisture + std.error_mois), width = 0.15)+
geom_point(aes(x = treatment, fill = treatment), size = 3) +
ggtitle("Average Soil Moisture \nof Each Decay Environment") +
ylab("Average Soil Moisture") +
xlab("Decay Environment") +
scale_x_discrete(labels = c("Morella", "Phragmites", "Pine")) +
scale_color_discrete(name = "Decay Environment",
labels = c("Morella", "Phragmites", "Pine"))
#treatment by moisture scatterplot (with error bars) *preferred
ggplot(soils_decomp_clean_treatment, aes(y = mean_moisture, col = treatment))  +
geom_errorbar(aes(x = treatment, ymin = mean_moisture - std.error_mois, ymax = mean_moisture + std.error_mois), width = 0.15)+
geom_point(aes(x = treatment), size = 3) +
ggtitle("Average Soil Moisture \nof Each Decay Environment") +
ylab("Average Soil Moisture") +
xlab("Decay Environment") +
scale_x_discrete(labels = c("Morella", "Phragmites", "Pine")) +
scale_color_discrete(name = "Decay Environment",
labels = c("Morella", "Phragmites", "Pine"))
#treatment by moisture scatterplot (with error bars) *preferred
ggplot(soils_decomp_clean_treatment, aes(y = mean_moisture, col = treatment))  +
geom_errorbar(aes(x = treatment, ymin = mean_moisture - std.error_mois, ymax = mean_moisture + std.error_mois), width = 0.15)+
geom_point(aes(x = treatment), size = 2.3) +
ggtitle("Average Soil Moisture \nof Each Decay Environment") +
ylab("Average Soil Moisture") +
xlab("Decay Environment") +
scale_x_discrete(labels = c("Morella", "Phragmites", "Pine")) +
scale_color_discrete(name = "Decay Environment",
labels = c("Morella", "Phragmites", "Pine"))
#treatment by moisture scatterplot (with error bars) *preferred
ggplot(soils_decomp_clean_treatment, aes(y = mean_moisture, col = treatment))  +
geom_errorbar(aes(x = treatment, ymin = mean_moisture - std.error_mois, ymax = mean_moisture + std.error_mois), width = 0.15)+
geom_point(aes(x = treatment), size = 2.3) +
ggtitle("Average Soil Moisture \nof Each Decay Environment") +
ylab("Average Soil Moisture") +
xlab("Decay Environment") +
scale_x_discrete(labels = c("Morella", "Phragmites", "Pine")) +
theme(legend.position = NULL)
#treatment by moisture scatterplot (with error bars) *preferred
ggplot(soils_decomp_clean_treatment, aes(y = mean_moisture, col = treatment))  +
geom_errorbar(aes(x = treatment, ymin = mean_moisture - std.error_mois, ymax = mean_moisture + std.error_mois), width = 0.15)+
geom_point(aes(x = treatment), size = 2.3) +
ggtitle("Average Soil Moisture \nof Each Decay Environment") +
ylab("Average Soil Moisture") +
xlab("Decay Environment") +
scale_x_discrete(labels = c("Morella", "Phragmites", "Pine")) +
theme(legend.position = "none")
#treatment by salinity scatterplot (with error bars)
ggplot(soils_decomp_clean_treatment, aes(y = mean_salinity))  +
geom_errorbar(aes(x = treatment, ymin = mean_salinity - std.error_sal, ymax = mean_salinity + std.error_sal, col = treatment), width = 0.15)+
geom_point(aes(x = treatment, fill = treatment, col = treatment), size = 3) +
ggtitle("Average Soil Salinity \nof Each Decay Environment") +
ylab("Average Soil Salinity") +
xlab("Decay Environment") +
scale_x_discrete(labels = c("Morella", "Phragmites", "Pine")) +
theme(legend.position = "none")
#treatment by salinity scatterplot (with error bars)
ggplot(soils_decomp_clean_treatment, aes(y = mean_salinity))  +
geom_errorbar(aes(x = treatment, ymin = mean_salinity - std.error_sal, ymax = mean_salinity + std.error_sal, col = treatment), width = 0.15)+
geom_point(aes(x = treatment, fill = treatment, col = treatment), size = 2.3) +
ggtitle("Average Soil Salinity \nof Each Decay Environment") +
ylab("Average Soil Salinity") +
xlab("Decay Environment") +
scale_x_discrete(labels = c("Morella", "Phragmites", "Pine")) +
theme(legend.position = "none")
#treatment by salinity scatterplot (with error bars)
ggplot(soils_decomp_clean_treatment, aes(y = mean_salinity))  +
geom_errorbar(aes(x = treatment, ymin = mean_salinity - std.error_sal, ymax = mean_salinity + std.error_sal, col = treatment), width = 0.15)+
geom_point(aes(x = treatment, fill = treatment, col = treatment), size = 2.3) +
ggtitle("Average Soil Salinity of Each Decay Environment") +
ylab("Average Soil Salinity") +
xlab("Decay Environment") +
scale_x_discrete(labels = c("Morella", "Phragmites", "Pine")) +
theme(legend.position = "none")
#treatment by moisture scatterplot (with error bars) *preferred
ggplot(soils_decomp_clean_treatment, aes(y = mean_moisture, col = treatment))  +
geom_errorbar(aes(x = treatment, ymin = mean_moisture - std.error_mois, ymax = mean_moisture + std.error_mois), width = 0.15)+
geom_point(aes(x = treatment), size = 2.3) +
ggtitle("Average Soil Moisture of Each Decay Environment") +
ylab("Average Soil Moisture") +
xlab("Decay Environment") +
scale_x_discrete(labels = c("Morella", "Phragmites", "Pine")) +
theme(legend.position = "none")
#Avg site decay rate by site soil moisture
ggplot(data = df_site_regressions, aes(x = mean_moisture, y = mean_alpha)) +
geom_point(aes(col = treatment), size = 2.3) +
#geom_smooth(method = "lm") +
ggtitle("Site Soil Moisture as Predictor of Site Soil Decay Rate ") +
xlab("Site Soil Moisture") +
ylab("Site Average Decay Rate") +
annotate(geom = "text",
label = "P-value = 0.201",
fontface = 2,
x = 0.7,
y = 0.15) +
annotate(geom = "text",
label = "R^2 = 0.1099",
fontface = 2,
x = 0.7,
y = 0.16) +
scale_color_discrete(name = "Decay\nEnvironment",
labels = c("Morella", "Phragmites", "Pine"))
#Avg site decay rate by site soil moisture
ggplot(data = df_site_regressions, aes(x = mean_moisture, y = mean_alpha)) +
geom_point(aes(col = treatment), size = 2.3) +
#geom_smooth(method = "lm") +
ggtitle("Site Soil Moisture as Predictor of Site Soil Decay Rate") +
xlab("Site Soil Moisture") +
ylab("Site Average Decay Rate") +
annotate(geom = "text",
label = "P-value = 0.201",
fontface = 2,
x = 0.7,
y = 0.15) +
annotate(geom = "text",
label = "R^2 = 0.1099",
fontface = 2,
x = 0.7,
y = 0.16) +
scale_color_discrete(name = "Decay\nEnvironment",
labels = c("Morella", "Phragmites", "Pine"))
#Avg site decay rate by site soil moisture
ggplot(data = df_site_regressions, aes(x = mean_moisture, y = mean_alpha)) +
geom_point(aes(col = treatment), size = 2.3) +
#geom_smooth(method = "lm") +
ggtitle("Site Soil Moisture as Predictor of Site Average Decay Rate") +
xlab("Site Soil Moisture") +
ylab("Site Average Decay Rate") +
annotate(geom = "text",
label = "P-value = 0.201",
fontface = 2,
x = 0.7,
y = 0.15) +
annotate(geom = "text",
label = "R^2 = 0.1099",
fontface = 2,
x = 0.7,
y = 0.16) +
scale_color_discrete(name = "Decay\nEnvironment",
labels = c("Morella", "Phragmites", "Pine"))
#Avg site decay rate by site soil salinity
ggplot(data = df_site_regressions, aes(x = mean_salinity, y = mean_alpha)) +
geom_point(aes(col = treatment), size = 2.3) +
#geom_smooth(method = "lm") +
ggtitle("Site Soil Salinity as Predictor of Site Average Decay Rate") +
xlab("Site Soil Salinity") +
ylab("Site Average Decay Rate") +
annotate(geom = "text",
label = "P-value = 0.30",
fontface = 2,
x = 0.7,
y = 0.16) +
annotate(geom = "text",
label = "R^2 = 0.03",
fontface = 2,
x = 0.7,
y = 0.17) +
scale_color_discrete(name = "Decay\nEnvironment",
labels = c("Morella", "Phragmites", "Pine")) +
ylim(c(0.15, 0.29))
#treatment by salinity scatterplot (with error bars)
ggplot(soils_decomp_clean_treatment, aes(y = mean_salinity))  +
geom_errorbar(aes(x = treatment, ymin = mean_salinity - std.error_sal, ymax = mean_salinity + std.error_sal, col = treatment), width = 0.15)+
geom_point(aes(x = treatment, fill = treatment, col = treatment), size = 2.3) +
ggtitle("Average Soil Salinity of Each Decay Environment") +
ylab("Average Soil Salinity") +
xlab("Decay Environment") +
scale_x_discrete(labels = c("Morella", "Phragmites", "Pine")) +
theme(legend.position = "none")
#OFFICIAL Graph showing that the curves are indeed curves over 10 years
ggplot(data = perc_mass_to_eyeball_fit_ten, aes(x = years_to_collection)) +
geom_smooth(aes(y = pmr),
color = "salmon") +
geom_smooth(data = df %>% filter (treatment == "Morella"), aes(y = pred), se = FALSE, col = "salmon") +
geom_point(data = df %>%
filter(treatment == "Morella") %>%
add_predictions(model = morella_model),
aes(x = years_to_collection, y = PercMassRemaining)) +
ggtitle("Decay Curve of Litter Under Morella Over 10 Years") +
ylab("Percent Mass Remaining") +
xlab("Years")
#Avg site decay rate by site soil salinity
ggplot(data = df_site_regressions, aes(x = mean_salinity, y = mean_alpha)) +
geom_point(aes(col = treatment), size = 2.3) +
#geom_smooth(method = "lm") +
ggtitle("Site Soil Salinity as Predictor of Site Average Decay Rate") +
xlab("Site Soil Salinity") +
ylab("Site Average Decay Rate") +
annotate(geom = "text",
label = "P-value = 0.30",
fontface = 2,
x = 0.7,
y = 0.16) +
annotate(geom = "text",
label = "R^2 = 0.03",
fontface = 2,
x = 0.7,
y = 0.17) +
scale_color_discrete(name = "Decay\nEnvironment",
labels = c("Morella", "Phragmites", "Pine")) +
ylim(c(0.15, 0.29))
#Avg site decay rate by site soil salinity
ggplot(data = df_site_regressions, aes(x = mean_salinity, y = mean_alpha)) +
geom_point( size = 2.3) +
#geom_smooth(method = "lm") +
ggtitle("Site Soil Salinity as Predictor of Site Average Decay Rate") +
xlab("Site Soil Salinity") +
ylab("Site Average Decay Rate") +
annotate(geom = "text",
label = "P-value = 0.30",
fontface = 2,
x = 0.7,
y = 0.16) +
annotate(geom = "text",
label = "R^2 = 0.03",
fontface = 2,
x = 0.7,
y = 0.17) +
scale_color_discrete(name = "Decay\nEnvironment",
labels = c("Morella", "Phragmites", "Pine")) +
ylim(c(0.15, 0.29))
# Importing data
df <- read.csv("data/decomp_data.csv")
sitedf <- read.csv("data/site_contents.csv")[, c(1, 4)]
initials <- read.csv("data/initials.csv")
df <- merge(df, sitedf, by = "tag")
rm(sitedf)
#cleaning data
df$SLC <- interaction(as.factor(df$site), as.factor(df$class))
df$PercMassRemaining <- 1 - (df$init_total_mass - df$post_total_mass) / df$init_mass_litter
df$post_litter_mass <- df$init_mass_litter - df$mass_loss
df <- bind_rows(df, initials)
df[117, 3] <- "Phragmites"
df <- df %>%
mutate(days_to_collection = if_else(days_to_collection == 28, 22, days_to_collection)) %>%
mutate(days_to_collection = if_else(days_to_collection == 84, 76, days_to_collection)) %>%
mutate(days_to_collection = if_else(days_to_collection == 182, 163, days_to_collection)) %>%
mutate(days_to_collection = if_else(days_to_collection == 365, 345, days_to_collection))
df$years_to_collection <- df$days_to_collection/365
# visualizing the weird bump at the third collection date
ggplot(df, aes(x = days_to_collection, y = PercMassRemaining)) +
geom_point() +
ggtitle("Raw Data") +
xlab("Days to Collection") +
ylab("Percent Mass Remaining")
boxplot(df$PercMassRemaining ~ df$days_to_collection, outlier_tagging = TRUE)
find_outliers_df <- df %>%
filter(SLC == "Mo3.Morella")
View(find_outliers_df)
source("exec/util.R")
# plotting alpha estimates.  Notice that they get more constrained over time.
# in a perfect dataset with no noise, you'd expect that each point within a group/treatment/etc
# produces the exact same alpha -- it should be a horizontal line over time.
ggplot(data = df) +
aes(x = days_to_collection, y = alpha_est) +
geom_point() +
facet_wrap(vars(treatment))
# here's a NLS example without self-starting.
cool_model <- nls(
post_litter_mass ~ init_mass_litter * exp(-a * years_to_collection),
data = df %>% filter(treatment == "Morella"),
start = list(a = 0.02)
)
cool_model
# here's a sanity check for the estimate of alpha that it spits out
# you'll need to do the actual stats on it but here's a gander
# get_mass_pct_remaining_at_t is also a function from "exec/util.R"
t_to_eyeball_fit <- 1:365
perc_mass_to_eyeball_fit <- get_mass_pct_remaining_at_t(
a = coef(cool_model)[["a"]],
t = t_to_eyeball_fit
)
plot(
x = df[which(df$treatment == "Morella"), "days_to_collection"],
y = df[which(df$treatment == "Morella"), "PercMassRemaining"]
)
lines(
x = t_to_eyeball_fit,
y = perc_mass_to_eyeball_fit,
t = "p",
col = "blue"
)
# direct estimate of alpha for each measurement point
# this function lives in "exec/util.R" and is read in via the source() call above
df$alpha_est <- get_alpha(df$PercMassRemaining, df$days_to_collection)
# plotting alpha estimates.  Notice that they get more constrained over time.
# in a perfect dataset with no noise, you'd expect that each point within a group/treatment/etc
# produces the exact same alpha -- it should be a horizontal line over time.
ggplot(data = df) +
aes(x = days_to_collection, y = alpha_est) +
geom_point() +
facet_wrap(vars(treatment))
morella_model <- nls(
PercMassRemaining ~ 1 * exp(-a * years_to_collection),
data = df %>% filter(treatment == "Morella"),
start = list(a = 0.02)
)
morella_model
phrag_model <- nls(
PercMassRemaining ~ 1 * exp(-a * years_to_collection),
data = df %>% filter(treatment == "Phragmites"),
start = list(a = 0.02)
)
pine_model <- nls(
PercMassRemaining ~ 1 * exp(-a * years_to_collection),
data = df %>% filter(treatment == "Pine"),
start = list(a = 0.02)
)
morella_model
# Testing Noa model - trying to do here what Riley did with cool_model. Not sure if it actually shows us new info or not.
t_to_eyeball_fit <- 1:365
perc_mass_to_eyeball_fit_noa <- get_mass_pct_remaining_at_t(
a = coef(noa_model)[["a"]],
t = t_to_eyeball_fit
)
plot(
x = df[which(df$treatment == "Morella"), "years_to_collection"],
y = df[which(df$treatment == "Morella"), "PercMassRemaining"]
)
lines(
x = t_to_eyeball_fit,
y = perc_mass_to_eyeball_fit_noa,
t = "p",
col = "blue"
)
deviance(morella_model)
deviance(phrag_model)
deviance(pine_model)
#graphing treatment alphas with standard error from treatment model
#Bar version
ggplot(treatment_alphas_tbl, aes(x = treatment, y = a)) +
geom_bar(stat = "identity", width = 0.5, fill = "light blue") +
geom_errorbar(aes(ymin = a - std.error, ymax = a + std.error), width = 0.2)
# Iterating noa's model (separated above by ) for all treatments
treatment_alphas <- df %>%
nest(-treatment) %>%
mutate(
fit = map(data, ~ nls(PercMassRemaining ~ 1 * exp(-a * years_to_collection), data = df, start = list(a = 0.1))),
tidied = map(fit, tidy),
Augmented = map(fit, augment),
)
treatment_alphas_tbl <- treatment_alphas %>%
unnest(tidied) %>%
select(treatment, term, estimate, std.error) %>%
spread(term, estimate)
treatment_alphas_tbl
#graphing treatment alphas with standard error from treatment model
#Bar version
ggplot(treatment_alphas_tbl, aes(x = treatment, y = a)) +
geom_bar(stat = "identity", width = 0.5, fill = "light blue") +
geom_errorbar(aes(ymin = a - std.error, ymax = a + std.error), width = 0.2)
#Point version (preferred)
ggplot(treatment_alphas_tbl, aes(x = treatment, y = a)) +
geom_point(aes(col = treatment), size = 2) +
geom_errorbar(aes(ymin = a - std.error, ymax = a + std.error, col = treatment), width = 0.1) +
ggtitle("Decay Coefficient (k) for each Decay Environment \n (with standard error)") +
xlab("Decay Environment") +
ylab("k") +
theme(legend.position = "none") +
ylim(c(0.19,0.29))
# Iterating noa_model (now morella_model) for all Site/Treatment combos
SLC_alphas <- df %>%
nest(-SLC) %>%
mutate(
fit = map(data, ~ nls(PercMassRemaining ~ 1 * exp(-a * years_to_collection), data = df, start = list(a = 0.01))),
tidied = map(fit, tidy),
Augmented = map(fit, augment),
)
SLC_alphas_tbl <-
SLC_alphas %>%
unnest(tidied) %>%
select(SLC, term, estimate, std.error) %>%
spread(term, estimate)
SLC_alphas_tbl
df <- df %>%
merge(SLC_alphas_tbl, by = "SLC")
SLC_alphas_tbl <- as.data.frame(SLC_alphas_tbl)
SLC_alphas_tbl$site <- substr(SLC_alphas_tbl$SLC, 1, 3)
SLC_alphas_tbl$treatment <- substr(SLC_alphas_tbl$SLC, 1, 2)
SLC_alphas_tbl$litter = rep(c("Morella", "Phragmites", "Pinus"), 9)
SLC_alphas_tbl$litter = as.factor(SLC_alphas_tbl$litter)
ggplot(SLC_alphas_tbl, aes(x = reorder(SLC, -a), y = a)) +
geom_point(aes(col = treatment), size = 2) +
geom_errorbar(aes(ymin = a - std.error, ymax = a + std.error
, col = treatment
),
width = 0.08) +
scale_color_discrete(name = "Decay\nEnvironment") +
theme(axis.text.x = element_text(angle = 90)
#  , legend.title = element_text("Decay Environment")
) +
ggtitle("Decay Coefficient (k) for each Site/Litter Combination (SLC)") +
xlab("SLC") +
ylab("k")
View(df)
library(stringr)
source("exec/util.R")
# Importing data
df <- read.csv("data/decomp_data.csv")
sitedf <- read.csv("data/site_contents.csv")[, c(1, 4)]
initials <- read.csv("data/initials.csv")
df <- merge(df, sitedf, by = "tag")
rm(sitedf)
View(df)
#cleaning data
df$SLC <- interaction(as.factor(df$site), as.factor(df$class))
df$PercMassRemaining <- 1 - (df$init_total_mass - df$post_total_mass) / df$init_mass_litter
df$post_litter_mass <- df$init_mass_litter - df$mass_loss
df <- bind_rows(df, initials)
df[117, 3] <- "Phragmites"
df <- df %>%
mutate(days_to_collection = if_else(days_to_collection == 28, 22, days_to_collection)) %>%
mutate(days_to_collection = if_else(days_to_collection == 84, 76, days_to_collection)) %>%
mutate(days_to_collection = if_else(days_to_collection == 182, 163, days_to_collection)) %>%
mutate(days_to_collection = if_else(days_to_collection == 365, 345, days_to_collection))
df$years_to_collection <- df$days_to_collection/365
# visualizing the weird bump at the third collection date
ggplot(df, aes(x = days_to_collection, y = PercMassRemaining)) +
geom_point() +
ggtitle("Raw Data") +
xlab("Days to Collection") +
ylab("Percent Mass Remaining")
boxplot(df$PercMassRemaining ~ df$days_to_collection, outlier_tagging = TRUE)
# [FROM RILEY SECTION STARTS HERE] direct estimate of alpha for each measurement point
# this function lives in "exec/util.R" and is read in via the source() call above
df$alpha_est <- get_alpha(df$PercMassRemaining, df$days_to_collection)
# plotting alpha estimates.  Notice that they get more constrained over time.
# in a perfect dataset with no noise, you'd expect that each point within a group/treatment/etc
# produces the exact same alpha -- it should be a horizontal line over time.
ggplot(data = df) +
aes(x = days_to_collection, y = alpha_est) +
geom_point() +
facet_wrap(vars(treatment))
# here's a NLS example without self-starting.
cool_model <- nls(
post_litter_mass ~ init_mass_litter * exp(-a * years_to_collection),
data = df %>% filter(treatment == "Morella"),
start = list(a = 0.02)
)
cool_model
# here's a sanity check for the estimate of alpha that it spits out
# you'll need to do the actual stats on it but here's a gander
# get_mass_pct_remaining_at_t is also a function from "exec/util.R"
t_to_eyeball_fit <- 1:365
perc_mass_to_eyeball_fit <- get_mass_pct_remaining_at_t(
a = coef(cool_model)[["a"]],
t = t_to_eyeball_fit
)
plot(
x = df[which(df$treatment == "Morella"), "days_to_collection"],
y = df[which(df$treatment == "Morella"), "PercMassRemaining"]
)
lines(
x = t_to_eyeball_fit,
y = perc_mass_to_eyeball_fit,
t = "p",
col = "blue"
)
morella_model <- nls(
PercMassRemaining ~ 1 * exp(-a * years_to_collection),
data = df %>% filter(treatment == "Morella"),
start = list(a = 0.02)
)
phrag_model <- nls(
PercMassRemaining ~ 1 * exp(-a * years_to_collection),
data = df %>% filter(treatment == "Phragmites"),
start = list(a = 0.02)
)
pine_model <- nls(
PercMassRemaining ~ 1 * exp(-a * years_to_collection),
data = df %>% filter(treatment == "Pine"),
start = list(a = 0.02)
)
#Comparing the fitness of each of the three treatment models:
deviance(morella_model)
deviance(phrag_model)
deviance(pine_model)
# Iterating noa_model (now morella_model) for all Site/Treatment combos
SLC_alphas <- df %>%
nest(-SLC) %>%
mutate(
fit = map(data, ~ nls(PercMassRemaining ~ 1 * exp(-a * years_to_collection), data = df, start = list(a = 0.01))),
tidied = map(fit, tidy),
Augmented = map(fit, augment),
)
View(SLC_alphas)
View(SLC_alphas[[2]][[1]])
View(SLC_alphas[[4]][[1]])
View(SLC_alphas[[5]][[1]])
View(SLC_alphas[[2]][[4]])
View(SLC_alphas[[4]][[2]])
SLC_alphas_tbl
SLC_alphas_tbl <-
SLC_alphas %>%
unnest(tidied) %>%
select(SLC, term, estimate, std.error) %>%
spread(term, estimate)
SLC_alphas_tbl
