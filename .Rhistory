getwd()
library(dplyr)
library(ggplot2)
library(tidyr)
library(broom)
source("exec/util.R")
source("exec/util.R")
setwd("/Users/noashapiro-tamir/Documents/dev/DecompProject/exec")
source("exec/util.R")
setwd("/Users/noashapiro-tamir/Documents/dev/DecompProject")
source("exec/util.R")
#Importing data
df <- read.csv("data/decomp_data.csv")
source("exec/util.R")
source("exec/util.R")
#Importing data
df <- read.csv("data/decomp_data.csv")
sitedf <- read.csv("data/site_contents.csv")[,c(1,4)]
df <- merge(df, sitedf, by = "tag")
df$SLC <- interaction(as.factor(df$site), as.factor(df$class))
df$PercMassRemaining <- 1 - (df$init_total_mass - df$post_total_mass)/df$init_mass_litter
df$post_litter_mass = df$init_mass_litter - df$mass_loss
# direct estimate of alpha for each measurement point
# this function lives in "exec/util.R" and is read in via the source() call above
df$alpha_est <- get_alpha(df$PercMassRemaining, df$days_to_collection)
# plotting alpha estimates.  Notice that they get more constrained over time.
# in a perfect dataset with no noise, you'd expect that each point within a group/treatment/etc
# produces the exact same alpha -- it should be a horizontal line over time.
ggplot(data = df) +
aes(x = days_to_collection, y = alpha_est) +
geom_point() +
facet_wrap(vars(treatment))
# here's a NLS example without self-starting.
cool_model <- nls(
post_litter_mass ~ init_mass_litter * exp(-a * days_to_collection),
data = df %>% filter(treatment == "Morella"),
start = list(a = 0.002)
)
cool_model
# here's a sanity check for the estimate of alpha that it spits out
# you'll need to do the actual stats on it but here's a gander
# get_mass_pct_remaining_at_t is also a function from "exec/util.R"
t_to_eyeball_fit <- 1:365
perc_mass_to_eyeball_fit <- get_mass_pct_remaining_at_t(
a = coef(cool_model)[['a']],
t = t_to_eyeball_fit
)
plot(
x = df[which(df$treatment == "Morella"),"days_to_collection"],
y = df[which(df$treatment == "Morella"),"PercMassRemaining"]
)
lines(
x = t_to_eyeball_fit,
y = perc_mass_to_eyeball_fit,
t = "p",
col = "blue"
)
#Noa makes the same model but with percents. Has a lower residual sum of squares so kept it. Want to double check the
noa_model <- nls(
PercMassRemaining ~ 1* exp(-a * days_to_collection),
data = df %>% filter(treatment == "Morella"),
start = list(a = 0.0008)
)
noa_model
#trying to do self-starting model... still isn't working :-/
fit <- nls(PercMassRemaining ~ SSasymp(days_to_collection, g, pl, log_alpha), data = df %>% filter(treatment == "Morella"))
#Testing Noa model - trying to do here what Riley did with Cool model. Not sure if it actually shows us new info or not.
t_to_eyeball_fit <- 1:365
perc_mass_to_eyeball_fit_noa <- get_mass_pct_remaining_at_t(
a = coef(noa_model)[['a']],
t = t_to_eyeball_fit
)
plot(
x = df[which(df$treatment == "Morella"),"days_to_collection"],
y = df[which(df$treatment == "Morella"),"PercMassRemaining"]
)
lines(
x = t_to_eyeball_fit,
y = perc_mass_to_eyeball_fit_noa,
t = "p",
col = "blue"
)
#Iterating noa_model for all treatments
treatment_alphas <- df %>%
nest(-treatment) %>%
mutate(
fit = map(data, ~nls(PercMassRemaining ~ 1* exp(-a * days_to_collection), data = ., start = list(a = 0.002))),
tidied = map(fit, tidy),
Augmented = map(fit, augment),)
treatment_alphas_tbl <- treatment_alphas %>%
unnest(tidied) %>%
select(treatment, term, estimate) %>%
spread(term, estimate)
treatment_alphas_tbl
treatment_alphas_tbl <- treatment_alphas %>%
unnest(tidied) %>%
select(treatment, term, estimate) %>%
spread(term, estimate)
#Iterating noa_model for all treatments
treatment_alphas <- df %>%
nest(-treatment) %>%
mutate(
fit = map(data, ~nls(PercMassRemaining ~ 1* exp(-a * days_to_collection), data = ., start = list(a = 0.002))),
tidied = map(fit, tidy),
Augmented = map(fit, augment),)
#Iterating noa_model for all treatments
treatment_alphas <- df %>%
nest(-treatment) %>%
mutate(
fit = map(data, ~nls(PercMassRemaining ~ 1* exp(-a * days_to_collection), data = ., start = list(a = 0.002))),
tidied = map(fit, tidy),
Augmented = map(fit, augment),)
treatment_alphas_tbl <- treatment_alphas %>%
unnest(tidied) %>%
select(treatment, term, estimate) %>%
spread(term, estimate)
#Iterating noa_model for all treatments
treatment_alphas <- df %>%
nest(-treatment) %>%
mutate(
fit = map(data, ~nls(PercMassRemaining ~ 1* exp(-a * days_to_collection), data = ., start = list(a = 0.002))),
tidied = map(fit, tidy),
Augmented = map(fit, augment),)
library(dplyr)
library(ggplot2)
library(tidyr)
library(broom)
source("exec/util.R")
#Importing data
df <- read.csv("data/decomp_data.csv")
#Importing data
df <- read.csv("data/decomp_data.csv")
#Iterating noa_model for all treatments
treatment_alphas <- df %>%
nest(-treatment) %>%
mutate(
fit = map(data, ~nls(PercMassRemaining ~ 1* exp(-a * days_to_collection), data = ., start = list(a = 0.002))),
tidied = map(fit, tidy),
Augmented = map(fit, augment),)
treatment_alphas_tbl <- treatment_alphas %>%
unnest(tidied) %>%
select(treatment, term, estimate) %>%
spread(term, estimate)
treatment_alphas_tbl
#Iterating noa_model for all Site/Treatment combos
SLC_alphas <- df %>%
nest(-SLC) %>%
mutate(
fit = map(data, ~nls(PercMassRemaining ~ 1* exp(-a * days_to_collection), data = ., start = list(a = 0.002))),
tidied = map(fit, tidy),
Augmented = map(fit, augment),)
SLC_alphas_tbl <-
SLC_alphas %>%
unnest(tidied) %>%
select(SLC, term, estimate) %>%
spread(term, estimate)
#printing tables and then graphs (rudimentary) of alpha values
treatment_alphas_tbl
SLC_alphas_tbl
treatment_plot <- ggplot(data = treatment_alphas_tbl, aes(x = treatment, y = a)) + theme(axis.text.x = element_text(angle = 90)) + geom_point()
library(dplyr)
library(ggplot2)
library(tidyr)
library(broom)
source("exec/util.R")
#Importing data
df <- read.csv("data/decomp_data.csv")
sitedf <- read.csv("data/site_contents.csv")[,c(1,4)]
df <- merge(df, sitedf, by = "tag")
df$SLC <- interaction(as.factor(df$site), as.factor(df$class))
df$PercMassRemaining <- 1 - (df$init_total_mass - df$post_total_mass)/df$init_mass_litter
df$post_litter_mass = df$init_mass_litter - df$mass_loss
df <- df %>%
mutate(days_to_collection, if_else(days_to_collection = 28, 22,))
View(df)
df <- df %>%
mutate(days_to_collection, if_else(days_to_collection == 28, 22,))
df <- df %>%
mutate(days_to_collection, if_else(days_to_collection == 28, 22, days_to_collection))
View(df)
df <- df %>%
mutate(days_to_collection, days_to_collection, if_else(days_to_collection == 28, 22, days_to_collection))
rm(df$`if_else(days_to_collection == 28, 22, days_to_collection)`)
rm(df$if_else(days_to_collection == 28, 22, days_to_collection))
#setup
library(stats)
library(dplyr)
library(broom)
library(ggplot2)
setwd("/Users/noashapiro-tamir/Desktop/R_Files/DecompProject/")
#Importing data
Data <- read.csv("Decomp_Data_Edited_Noa_Raw_1.csv")
Data_bysite <- read.csv("Decomp_Data_Edited_Noa_Site_Contents_3.csv")
#Cleaning data to prep for merging
colnames (Data)[1] <- "Tag"
colnames (Data)[5] <- "Initial_bag_mass"
colnames (Data)[6] <- "Initial_litter_mass"
colnames (Data)[7] <- "Initial_bag_litter_mass"
colnames (Data)[8] <- "Dry_Mass"
colnames (Data)[10] <- "Day"
colnames (Data_bysite)[4] <- "Tag"
Data_bysite = Data_bysite[,c(1,4)]
Data$PercMassRemaining <- Data$Dry_Mass/Data$`Initial_bag_litter_mass`
Data$PercMassInitial <- Data$Initial_bag_litter_mass/Data$Initial_bag_litter_mass
Data$Years <- Data$Day/365
#merging site name to Data file so that we can stratify curves later
Data <- merge(Data, Data_bysite, by = "Tag")
#Making a column for unique values of site and litter type together
Data$SiteLitterCombo <- interaction(as.factor(Data$Site), as.factor(Data$Litter.type))
#Excluding the 6-month (182 day) data points because they skew the data very confusingly.
Data2 <- Data[Data$Day != 182, ]
#Importing data
df <- read.csv("data/decomp_data.csv")
sitedf <- read.csv("data/site_contents.csv")[,c(1,4)]
df <- merge(df, sitedf, by = "tag")
df$SLC <- interaction(as.factor(df$site), as.factor(df$class))
df$PercMassRemaining <- 1 - (df$init_total_mass - df$post_total_mass)/df$init_mass_litter
df$post_litter_mass = df$init_mass_litter - df$mass_loss
df <- df %>%
mutate(days_to_collection, days_to_collection, if_else(days_to_collection == 28, 22, days_to_collection))
# direct estimate of alpha for each measurement point
# this function lives in "exec/util.R" and is read in via the source() call above
df$alpha_est <- get_alpha(df$PercMassRemaining, df$days_to_collection)
library(dplyr)
library(ggplot2)
library(tidyr)
library(broom)
source("exec/util.R")
#Importing data
df <- read.csv("data/decomp_data.csv")
sitedf <- read.csv("data/site_contents.csv")[,c(1,4)]
df <- merge(df, sitedf, by = "tag")
df$SLC <- interaction(as.factor(df$site), as.factor(df$class))
df$PercMassRemaining <- 1 - (df$init_total_mass - df$post_total_mass)/df$init_mass_litter
df$post_litter_mass = df$init_mass_litter - df$mass_loss
df <- df %>%
mutate(days_to_collection, days_to_collection, if_else(days_to_collection == 28, 22, days_to_collection))
View(df)
df <- df %>%
mutate(days_to_collection = days_to_collection, if_else(days_to_collection == 28, 22, days_to_collection))
df <- df %>%
mutate(days_to_collection = if_else(days_to_collection == 28, 22, days_to_collection))
rm(df$`if_else(days_to_collection == 28, 22, days_to_collection)`
rm(df$`if_else(days_to_collection == 28, 22, days_to_collection)`)
#Importing data
df <- read.csv("data/decomp_data.csv")
sitedf <- read.csv("data/site_contents.csv")[,c(1,4)]
df <- merge(df, sitedf, by = "tag")
df$SLC <- interaction(as.factor(df$site), as.factor(df$class))
df$PercMassRemaining <- 1 - (df$init_total_mass - df$post_total_mass)/df$init_mass_litter
df$post_litter_mass = df$init_mass_litter - df$mass_loss
df <- df %>%
library(dplyr)
library(ggplot2)
library(tidyr)
library(broom)
source("exec/util.R")
#Importing data
df <- read.csv("data/decomp_data.csv")
sitedf <- read.csv("data/site_contents.csv")[,c(1,4)]
df <- merge(df, sitedf, by = "tag")
df$SLC <- interaction(as.factor(df$site), as.factor(df$class))
df$PercMassRemaining <- 1 - (df$init_total_mass - df$post_total_mass)/df$init_mass_litter
df$post_litter_mass = df$init_mass_litter - df$mass_loss
df <- df %>%
df <- df %>%
mutate(days_to_collection = if_else(days_to_collection == 28, 22, days_to_collection))
View(df)
library(dplyr)
df <- df %>%
mutate(days_to_collection = if_else(days_to_collection == 28, 22, days_to_collection))
df <- df %>%
mutate(days_to_collection = if_else(days_to_collection == 28, 22, days_to_collection))%>%
mutate(days_to_collection = if_else(days_to_collection == 84, 76, days_to_collection))
df <- df %>%
mutate(days_to_collection = if_else(days_to_collection == 28, 22, days_to_collection))%>%
mutate(days_to_collection = if_else(days_to_collection == 84, 76, days_to_collection))%>%
mutate(days_to_collection = if_else(days_to_collection == 182, 163, days_to_collection))%>%
mutate(days_to_collection = if_else(days_to_collection == 365, 345, days_to_collection))
#Iterating noa_model for all treatments
treatment_alphas <- df %>%
nest(-treatment) %>%
mutate(
fit = map(data, ~nls(PercMassRemaining ~ 1* exp(-a * days_to_collection), data = ., start = list(a = 0.002))),
tidied = map(fit, tidy),
Augmented = map(fit, augment),)
install.packages("tidyverse")
#Iterating noa_model for all treatments
treatment_alphas <- df %>%
nest(-treatment) %>%
mutate(
fit = map(data, ~nls(PercMassRemaining ~ 1* exp(-a * days_to_collection), data = ., start = list(a = 0.002))),
tidied = map(fit, tidy),
Augmented = map(fit, augment),)
treatment_alphas_tbl <- treatment_alphas %>%
unnest(tidied) %>%
select(treatment, term, estimate) %>%
spread(term, estimate)
library(purrr)
#Iterating noa_model for all treatments
treatment_alphas <- df %>%
nest(-treatment) %>%
mutate(
fit = map(data, ~nls(PercMassRemaining ~ 1* exp(-a * days_to_collection), data = ., start = list(a = 0.002))),
tidied = map(fit, tidy),
Augmented = map(fit, augment),)
treatment_alphas_tbl <- treatment_alphas %>%
unnest(tidied) %>%
select(treatment, term, estimate) %>%
spread(term, estimate)
treatment_alphas_tbl
#Iterating noa_model for all Site/Treatment combos
SLC_alphas <- df %>%
nest(-SLC) %>%
mutate(
fit = map(data, ~nls(PercMassRemaining ~ 1* exp(-a * days_to_collection), data = ., start = list(a = 0.002))),
tidied = map(fit, tidy),
Augmented = map(fit, augment),)
SLC_alphas_tbl <-
SLC_alphas %>%
unnest(tidied) %>%
select(SLC, term, estimate) %>%
spread(term, estimate)
#printing tables and then graphs (rudimentary) of alpha values
treatment_alphas_tbl
SLC_alphas_tbl
treatment_plot <- ggplot(data = treatment_alphas_tbl, aes(x = treatment, y = a)) + theme(axis.text.x = element_text(angle = 90)) + geom_point()
SLC_plot <- ggplot(data = SLC_alphas_tbl, aes(x = SLC, y = a)) + theme(axis.text.x = element_text(angle = 90)) + geom_point()
treatment_plot <- ggplot(data = treatment_alphas_tbl, aes(x = treatment, y = a)) + theme(axis.text.x = element_text(angle = 90)) + geom_point()
SLC_plot <- ggplot(data = SLC_alphas_tbl, aes(x = SLC, y = a)) + theme(axis.text.x = element_text(angle = 90)) + geom_point()
treatment_plot
treatment_plot <- ggplot(data = treatment_alphas_tbl, aes(x = treatment, y = a)) + theme(axis.text.x = element_text(angle = 90)) + geom_bar()
treatment_plot
treatment_plot <- ggplot(data = treatment_alphas_tbl, aes(x = treatment)) + theme(axis.text.x = element_text(angle = 90)) + geom_bar(aes(y = a))
treatment_plot
treatment_plot <- ggplot(data = treatment_alphas_tbl, aes(x = treatment, y = a)) + theme(axis.text.x = element_text(angle = 90)) + geom_point()
treatment_plot
treatment_plot <- ggplot(data = treatment_alphas_tbl, aes(x = treatment, y = a)) + theme(axis.text.x = element_text(angle = 90)) + geom_point()%>% view()
SLC_plot
treatment_plot <- ggplot(data = treatment_alphas_tbl, aes(x = treatment, y = a)) + theme(axis.text.x = element_text(angle = 90)) + geom_point(stat = identity)
treatment_plot <- ggplot(data = treatment_alphas_tbl, aes(x = treatment, y = a)) + theme(axis.text.x = element_text(angle = 90)) + geom_point()
SLC_plot <- ggplot(data = SLC_alphas_tbl, aes(x = SLC, y = a)) + theme(axis.text.x = element_text(angle = 90)) + geom_point()
SLC_plot
SLC_plot <- ggplot(data = SLC_alphas_tbl, aes(x = SLC, y = a, color = treatment)) + theme(axis.text.x = element_text(angle = 90)) + geom_point()
SLC_plot
SLC_plot <- ggplot(data = SLC_alphas_tbl, aes(x = SLC, y = a, color = unique(treatment))) + theme(axis.text.x = element_text(angle = 90)) + geom_point()
SLC_plot
SLC_plot <- ggplot(data = SLC_alphas_tbl, aes(x = SLC, y = a)) + theme(axis.text.x = element_text(angle = 90)) + geom_point(aes(color = treatment))
SLC_plot
SLC_plot <- ggplot(data = SLC_alphas_tbl, aes(x = SLC, y = a)) + theme(axis.text.x = element_text(angle = 90)) + geom_point(aes(colour = treatment))
treatment_plot
SLC_plot
SLC_plot <- ggplot(data = SLC_alphas_tbl, aes(x = SLC, y = a)) + theme(axis.text.x = element_text(angle = 90)) + geom_point(aes(colour = df$treatment))
SLC_plot
View(SLC_alphas_tbl)
#Iterating noa_model for all Site/Treatment combos
SLC_alphas <- df %>%
nest(-SLC) %>%
mutate(
fit = map(data, ~nls(PercMassRemaining ~ 1* exp(-a * days_to_collection), data = ., start = list(a = 0.002))),
tidied = map(fit, tidy),
Augmented = map(fit, augment),)
View(SLC_alphas)
#joining alpha values to df so that we can plot against all variables
df <- merge(df, treatment_alphas_tbl, by = "treatment")
View(df)
#joining alpha values to df so that we can plot against all variables
df <- merge(df, treatment_alphas_tbl, by = "treatment") %>%
rename(a == "treatment_alpha")
#joining alpha values to df so that we can plot against all variables
df <- merge(df, treatment_alphas_tbl, by = "treatment") %>%
rename(treatment_alpha = a)
#joining alpha values to df so that we can plot against all variables
df <- merge(df, treatment_alphas_tbl, by = "treatment") %>%
rename(treatment_alpha = a)
df$treatment_alpha = df$a
mutate(df, a = NULL)
df <- mutate(df, a = NULL)
View(df)
#joining alpha values to df so that we can plot against all variables
df <- merge(df, treatment_alphas_tbl, by = "treatment") %>%
mutate(df, a = NULL) %>%
merge(df, SLC_alphas_tbl, by = "SLC") %>%
mutate(df, a = NULL) %>%
#graphs of alpha values
treatment_plot <- ggplot(data = treatment_alphas_tbl, aes(x = treatment, y = a)) + theme(axis.text.x = element_text(angle = 90)) + geom_point()
#joining alpha values to df so that we can plot against all variables
df <- merge(df, treatment_alphas_tbl, by = "treatment") %>%
mutate(df, a = NULL)
#joining alpha values to df so that we can plot against all variables
df <- merge(df, treatment_alphas_tbl, by = "treatment") %>%
mutate(df, a = NULL) %>%
merge(df, SLC_alphas_tbl, by = "SLC")
#joining alpha values to df so that we can plot against all variables
df <- merge(df, treatment_alphas_tbl, by = "treatment") %>%
mutate(df, a = NULL) %>%
merge(df, SLC_alphas_tbl, by == "SLC")
#joining alpha values to df so that we can plot against all variables
df <- merge(df, treatment_alphas_tbl, by = "treatment") %>%
mutate(df, a = NULL)
df <- merge(df, SLC_alphas_tbl, by = "SLC")
#joining alpha values to df so that we can plot against all variables
df <- merge(df, treatment_alphas_tbl, by = "treatment") %>%
rename(treatment_alpha = a) %>%
mutate(df, a = NULL)
#joining alpha values to df so that we can plot against all variables
df <- merge(df, treatment_alphas_tbl, by = "treatment") %>%
df$treatment_alpha = df$a %>%
mutate(df, a = NULL)
df$treatment_alpha = df$a
mutate(df, a = NULL)
#joining alpha values to df so that we can plot against all variables
df <- merge(df, treatment_alphas_tbl, by = "treatment")
df$treatment_alpha = df$a
df<- mutate(df, a = NULL)
df <- merge(df, SLC_alphas_tbl, by = "SLC") %>%
mutate(df, a = NULL)
df <- merge(df, SLC_alphas_tbl, by = "SLC")
mutate(df, a = NULL)
df<- mutate(df, a.x = NULL)
df<- mutate(df, a.y = NULL)
df<- mutate(df, a = NULL)
#joining alpha values to df so that we can plot against all variables
df <- merge(df, treatment_alphas_tbl, by = "treatment")
df$treatment_alpha = df$a
df<- mutate(df, a = NULL)
df <- merge(df, SLC_alphas_tbl, by = "SLC")
df$SLC_alpha = df$a
df<- mutate(df, a = NULL)
treatment_plot <- ggplot(data = df, aes(x = treatment, y = treatment_alpha)) + theme(axis.text.x = element_text(angle = 90)) + geom_point()
treatment_plot
SLC_plot <- ggplot(data = df, aes(x = SLC, y = SLC_alpha)) + theme(axis.text.x = element_text(angle = 90)) + geom_point(aes(colour = treatment))
SLC_plot
SLC_plot <- ggplot(data = df, aes(x = SLC, y = SLC_alpha)) + theme(axis.text.x = element_text(angle = 90)) + geom_point(aes(colour = treatment))
SLC_plot
