plot(SiteTreatment1$Day, SiteTreatment1$PercMassRemaining, )
plot(SiteTreatment1$Day, SiteTreatment1$PercMassRemaining)
curve(x^-0.55, from=0, to=365, add=TRUE)
curve(x^-0.55, from=0, to=365, add=TRUE)
plot(SiteTreatment1$Day, SiteTreatment1$PercMassRemaining)
curve(x^-0.55, from=0, to=365, add=TRUE)
curve(x^-0.45, from=0, to=365, add=TRUE)
curve(x^-0.15, from=0, to=365, add=TRUE)
curve(x^-15, from=0, to=365, add=TRUE)
curve(x^-200, from=0, to=365, add=TRUE)
curve(x^200, from=0, to=365, add=TRUE)
curve(x^1, from=0, to=365, add=TRUE)
curve(x^1, from=0, to=365)
curve(x^0.11, from=0, to=365)
curve(x^0.41, from=0, to=365)
curve(x^0.01, from=0, to=365)
curve(x^-0.01, from=0, to=365)
plot(SiteTreatment1$Day, SiteTreatment1$PercMassRemaining)
curve(x^-0.01, from=0, to=365, add=TRUE)
curve(x^-0.045, from=0, to=365, add=TRUE)
nls(PercMassRemaining ~ Dry_Mass + (Initial_bag_litter_mass - Dry_Mass) * exp(-alpha * Day),
data = SiteTreatment1,
start = list(alpha = 0.045))
curve(x^-0.065, from=0, to=365, add=TRUE)
curve(x^-0.065, from=0, to=365, add=TRUE)
curve(x^-0.085, from=0, to=365, add=TRUE)
curve(x^-0.015, from=0, to=365, add=TRUE)
curve(x^-0.095, from=0, to=365, add=TRUE)
curve(x^-0.0015, from=0, to=365, add=TRUE)
curve(x^-0.15, from=0, to=365, add=TRUE)
curve(x^-0.15, from=0, to=365, add=TRUE)
curve(x^-0.015, from=0, to=365, add=TRUE)
plot(SiteTreatment1$Day, SiteTreatment1$PercMassRemaining)
curve(x^-0.015, from=0, to=365, add=TRUE)
curve(x^-0.085, from=0, to=365, add=TRUE)
curve(x^-0.045, from=0, to=365, add=TRUE)
curve(x^-0.045, from=0, to=365, add=TRUE, col="Green")
plot(SiteTreatment1$Day, SiteTreatment1$PercMassRemaining)
curve(x^-0.045, from=0, to=365, add=TRUE, col="Green")
curve(x^-0.045, from=0, to=365, add=TRUE, col = "violet")
plot(SiteTreatment1$Day, SiteTreatment1$PercMassRemaining)
curve(x^-0.045, from=0, to=365, add=TRUE, col = "violet")
curve(x^-0.15, from=0, to=365, add=TRUE, col = "violet")
curve(x^-0.-15, from=0, to=365, add=TRUE, col = "violet")
curve(x^-0.015, from=0, to=365, add=TRUE, col = "violet")
curve(x^-0.018, from=0, to=365, add=TRUE, col = "violet")
curve(x^-0.016, from=0, to=365, add=TRUE, col = "violet")
curve(x^-0.026, from=0, to=365, add=TRUE, col = "violet")
curve(x^-0.019, from=0, to=365, add=TRUE, col = "violet")
curve(x^-0.013, from=0, to=365, add=TRUE, col = "violet")
curve(x^-0.012, from=0, to=365, add=TRUE, col = "violet")
curve(x^-0.011, from=0, to=365, add=TRUE, col = "violet")
curve(x^-0.009, from=0, to=365, add=TRUE, col = "violet")
curve(x^-0.008, from=0, to=365, add=TRUE, col = "violet")
plot(SiteTreatment1$Day, SiteTreatment1$PercMassRemaining)
curve(x^-0.008, from=0, to=365, add=TRUE, col = "violet")
nls(PercMassRemaining ~ Dry_Mass + (Initial_bag_litter_mass - Dry_Mass) * exp(-alpha * Day),
data = SiteTreatment1,
start = list(alpha = 0.008))
nls(PercMassRemaining ~ Dry_Mass + (Initial_bag_litter_mass - Dry_Mass) * exp(-alpha * Day),
data = SiteTreatment1,
start = list(alpha = 0.008))
SiteTreatment2 <- Data %>% filter(SiteTreatment == 'Phragmites.Pi1')
plot(SiteTreatment2$Day, SiteTreatment2$PercMassRemaining)
plot(SiteTreatment1$Day, SiteTreatment1$PercMassRemaining)
plot(SiteTreatment2$Day, SiteTreatment2$PercMassRemaining)
SiteTreatment2 <- Data %>% filter(SiteTreatment == 'Phragmites.Pi1')
plot(SiteTreatment1$Day, SiteTreatment1$PercMassRemaining)
plot(SiteTreatment2$Day, SiteTreatment2$PercMassRemaining)
View(SiteTreatment2)
#setting working directory on my computer
setwd("/Users/noashapiro-tamir/Desktop/R_Files/DecompProject")
#Importing data
Data <- read.csv("Decomp_Data_Edited_Noa_Raw_1.csv")
Data_bysite <- read.csv("Decomp_Data_Edited_Noa_Site_Contents_3.csv")
#Cleaning data to prep for merging
colnames (Data)[1] <- "Tag"
colnames (Data)[5] <- "Initial_bag_mass"
colnames (Data)[6] <- "Initial_litter_mass"
colnames (Data)[7] <- "Initial_bag_litter_mass"
colnames (Data)[8] <- "Dry_Mass"
colnames (Data)[10] <- "Day"
colnames (Data_bysite)[4] <- "Tag"
Data_bysite = Data_bysite[,c(1,4)]
Data$PercMassRemaining <- Data$Dry_Mass/Data$`Initial_bag_litter_mass`
Data$SiteLitterCombo <- interaction(as.factor(Data$Litter.type), as.factor(Data$Site))
#merging site name to Data file so that we can stratify curves later
Data <- merge(Data, Data_bysite, by = "Tag")
#creating boxplot of all data points to check for outliers.
boxplot(Data$Mass.Loss, outlier.tagging = TRUE)
#just for fun...
boxplot(Data$Mass.Loss ~ Data$Day)
boxplot(Data$Mass.Loss ~ Data$treatment)
SiteTreatment1 <- Data %>% filter(SiteTreatment == 'Pine.Pi1')
View(Data)
Data$SiteLitterCombo <- interaction(as.factor(Data$Litter.type), as.factor(Data$Site))
SiteTreatment1 <- Data %>% filter(SiteLitterCombo == 'Pine.Pi1')
SiteTreatment1 <- Data %>% filter(SiteLitterCombo == 'Pine.Pi1')
SiteTreatment2 <- Data %>% filter(SiteLitterCombo == 'Phragmites.Pi1')
View(SiteTreatment1)
plot(SiteTreatment1$Day, SiteTreatment1$PercMassRemaining)
plot(SiteTreatment2$Day, SiteTreatment2$PercMassRemaining)
plot(SiteTreatment1$Day, SiteTreatment1$PercMassRemaining)
plot(SiteTreatment2$Day, SiteTreatment2$PercMassRemaining)
rm(SiteTreatment1)
rm(SiteTreatment2)
#Importing data
Data <- read.csv("Decomp_Data_Edited_Noa_Raw_1.csv")
Data_bysite <- read.csv("Decomp_Data_Edited_Noa_Site_Contents_3.csv")
#Cleaning data to prep for merging
colnames (Data)[1] <- "Tag"
colnames (Data)[5] <- "Initial_bag_mass"
colnames (Data)[6] <- "Initial_litter_mass"
colnames (Data)[7] <- "Initial_bag_litter_mass"
colnames (Data)[8] <- "Dry_Mass"
colnames (Data)[10] <- "Day"
colnames (Data_bysite)[4] <- "Tag"
Data_bysite = Data_bysite[,c(1,4)]
Data$PercMassRemaining <- Data$Dry_Mass/Data$`Initial_bag_litter_mass`
Data$SiteLitterCombo <- interaction(as.factor(Data$Site), as.factor(Data$Litter.type))
#merging site name to Data file so that we can stratify curves later
Data <- merge(Data, Data_bysite, by = "Tag")
#creating boxplot of all data points to check for outliers.
boxplot(Data$Mass.Loss, outlier.tagging = TRUE)
#just for fun...
boxplot(Data$Mass.Loss ~ Data$Day)
boxplot(Data$Mass.Loss ~ Data$treatment)
SiteTreatment1 <- Data %>% filter(SiteLitterCombo == 'Pine.Pi1')
Data$SiteLitterCombo <- interaction(as.factor(Data$Site), as.factor(Data$Litter.type))
count(Data$si)
count(Data$SiteLitterCombo)
unique(Data$SiteLitterCombo)
Pi1_Pine <- Data %>% filter(SiteLitterCombo == 'Pi1.Pine')
View(Pi1_Pine)
plot(Pi1_Pine$Day, Pi1_Pine$PercMassRemaining)
curve(x^-0.008, from=0, to=365, add=TRUE, col = "violet")
curve(x^-0.009, from=0, to=365, add=TRUE, col = "violet")
curve(x^-0.006, from=0, to=365, add=TRUE, col = "violet")
plot(Pi1_Pine$Day, Pi1_Pine$PercMassRemaining)
curve(x^-0.006, from=0, to=365, add=TRUE, col = "violet")
#finding a curve alpha manually
Pi1_Pine <- Data %>% filter(SiteLitterCombo == 'Pi1.Pine')
Pi1_Phrag <- Data %>% filter(SiteLitterCombo == 'Pi1.Phragmites')
Pi1_Mor <- Data %>% filter(SiteLitterCombo == 'Pi1.Morella')
plot(Pi1_Pine$Day, Pi1_Pine$PercMassRemaining)
curve(x^-0.006, from=0, to=365, add=TRUE, col = "violet")
plot(Pi1_Phrag$Day, Pi1_Phrag$PercMassRemaining)
curve(x^-0.006, from=0, to=365, add=TRUE, col = "violet")
plot(Pi1_Mor$Day, Pi1_Mor$PercMassRemaining)
curve(x^-0.006, from=0, to=365, add=TRUE, col = "violet")
nls(PercMassRemaining ~ Dry_Mass + (Initial_bag_litter_mass - Dry_Mass) * exp(-alpha * Day),
data = SiteTreatment1,
start = list(alpha = 0.006))
nls(PercMassRemaining ~ Dry_Mass + (Initial_bag_litter_mass - Dry_Mass) * exp(-alpha * Day),
data = Pi1_Pine,
start = list(alpha = 0.006))
fit <- nls(Mass.Loss ~ SSasymp(Day, k), data = Pi1_Pine)
plot(Pi1_Pine$Day, Pi1_Pine$Dry_Mass)
curve(x^-0.45, from=0, to=365, add=TRUE, col = "violet")
curve(x^-0.45, from=0, to=365, add=TRUE, col = "violet")
Pi1_Morella <- Data %>% filter(SiteLitterCombo == 'Pi1.Morella')
rm(Pi1_Mor)
Mo1_Pine
Mo1_Pine <- Data %>% filter(SiteLitterCombo == 'Mo1.Pine')
plot(Mo1_Pine$Day, Mo1_Pine$PercMassRemaining)
curve(x^-0.006, from=0, to=365, add=TRUE, col = "violet")
curve(x^-0.008, from=0, to=365, add=TRUE, col = "violet")
curve(x^-0.009, from=0, to=365, add=TRUE, col = "violet")
plot(Pi1_Phrag$Day, Pi1_Phrag$PercMassRemaining)
plot(Pi1_Morella$Day, Pi1_Mor$PercMassRemaining)
plot(Pi1_Pine$Day, Pi1_Pine$Dry_Mass)
curve(x^-0.45, from=0, to=365, add=TRUE, col = "violet")
plot(Pi1_Phrag$Day, Pi1_Phrag$PercMassRemaining)
curve(x^-0.006, from=0, to=365, add=TRUE, col = "violet")
plot(Pi1_Morella$Day, Pi1_Mor$PercMassRemaining)
curve(x^-0.006, from=0, to=365, add=TRUE, col = "violet")
plot(Mo1_Pine$Day, Mo1_Pine$PercMassRemaining)
curve(x^-0.009, from=0, to=365, add=TRUE, col = "violet")
fit <- nls(PercMassRemaining ~ SSasymp(Day, Dry_Mass, Initial_bag_litter_mass, log_alpha), data = Pi1_Pine)
fit <- nls(PercMassRemaining ~ SSasymp(Day, Dry_Mass, Initial_bag_litter_mass), data = Pi1_Pine)
#finding a curve alpha manually
Pi1_Pine <- Data %>% filter(SiteLitterCombo == 'Pi1.Pine')
Pi1_Phrag <- Data %>% filter(SiteLitterCombo == 'Pi1.Phragmites')
Pi1_Morella <- Data %>% filter(SiteLitterCombo == 'Pi1.Morella')
Pi2_Pine <- Data %>% filter(SiteLitterCombo == 'Pi2.Pine')
Pi2_Phrag <- Data %>% filter(SiteLitterCombo == 'Pi2.Phragmites')
Pi2_Morella <- Data %>% filter(SiteLitterCombo == 'Pi2.Morella')
Pi3_Pine <- Data %>% filter(SiteLitterCombo == 'Pi3.Pine')
Pi3_Phrag <- Data %>% filter(SiteLitterCombo == 'Pi3.Phragmites')
Pi3_Morella <- Data %>% filter(SiteLitterCombo == 'Pi3.Morella')
Mo1_Pine <- Data %>% filter(SiteLitterCombo == 'Mo1.Pine')
Mo1_Phrag <- Data %>% filter(SiteLitterCombo == 'Mo1.Phragmites')
Mo1_Morella <- Data %>% filter(SiteLitterCombo == 'Mo1.Morella')
Mo2_Pine <- Data %>% filter(SiteLitterCombo == 'Mo2.Pine')
Mo2_Phrag <- Data %>% filter(SiteLitterCombo == 'Mo2.Phragmites')
Mo2_Morella <- Data %>% filter(SiteLitterCombo == 'Mo2.Morella')
Mo3_Pine <- Data %>% filter(SiteLitterCombo == 'Mo3.Pine')
Mo3_Phrag <- Data %>% filter(SiteLitterCombo == 'Mo3.Phragmites')
Mo3_Morella <- Data %>% filter(SiteLitterCombo == 'Mo3.Morella')
Ph1_Pine <- Data %>% filter(SiteLitterCombo == 'Ph1.Pine')
Ph1_Phrag <- Data %>% filter(SiteLitterCombo == 'Ph1.Phragmites')
Ph1_Morella <- Data %>% filter(SiteLitterCombo == 'Ph1.Morella')
Ph2_Pine <- Data %>% filter(SiteLitterCombo == 'Ph2.Pine')
Ph2_Phrag <- Data %>% filter(SiteLitterCombo == 'Ph2.Phragmites')
Ph2_Morella <- Data %>% filter(SiteLitterCombo == 'Ph2.Morella')
Ph3_Pine <- Data %>% filter(SiteLitterCombo == 'Ph3.Pine')
Ph3_Phrag <- Data %>% filter(SiteLitterCombo == 'Ph3.Phragmites')
Ph3_Morella <- Data %>% filter(SiteLitterCombo == 'Ph3.Morella')
plot(Ph3_Morella$Day, Ph3_Morella$PercMassRemaining)
curve(x^-0.009, from=0, to=365, add=TRUE, col = "violet")
plot(Ph3_Morella$Day, Ph3_Morella$PercMassRemaining, ylim = c(0,1))
curve(x^-0.009, from=0, to=365, add=TRUE, col = "violet")
plot(Ph3_Morella$Day, Ph3_Morella$PercMassRemaining, ylim = c(0.5,1))
curve(x^-0.009, from=0, to=365, add=TRUE, col = "violet")
plot(Ph3_Morella$Day, Ph3_Morella$PercMassRemaining, ylim = c(0.8,1))
curve(x^-0.009, from=0, to=365, add=TRUE, col = "violet")
curve(x^-0.019, from=0, to=365, add=TRUE, col = "violet")
plot(Mo1_Pine$Day, Mo1_Pine$PercMassRemaining)
curve(x^-0.019, from=0, to=365, add=TRUE, col = "violet")
plot(Ph3_Morella$Day, Ph3_Morella$PercMassRemaining, ylim = c(0.8,1))
curve(x^-0.019, from=0, to=365, add=TRUE, col = "violet")
curve(x^-0.019, from=0, to=365, add=TRUE, col = "violet", weight = "heavy")
curve(x^-0.019, from=0, to=365, add=TRUE, col = "violet", size = 2)
curve(x^-0.019, from=0, to=365, add=TRUE, col = "violet", size = 4)
plot(Ph3_Morella$Day, Ph3_Morella$PercMassRemaining, ylim = c(0.8,1))
curve(x^-0.019, from=0, to=365, add=TRUE, col = "violet", size = 4)
curve(x^-0.019, from=0, to=365, add=TRUE, col = "violet", size = 4)
curve(x^-0.019, from=0, to=365, add=TRUE, col = "violet", size = 8)
plot(Ph3_Morella$Day, Ph3_Morella$PercMassRemaining, ylim = c(0.8,1))
curve(x^-0.019, from=0, to=365, add=TRUE, col = "violet", size = 8)
curve(x^-0.019, from=0, to=365, add=TRUE, col = "violet", lwd = 8)
curve(x^-0.25, from=0, to=365, add=TRUE, col = "violet", lwd = 8)
plot(Ph3_Morella$Day, Ph3_Morella$PercMassRemaining, ylim = c(0.8,1))
curve(x^-0.25, from=0, to=365, add=TRUE, col = "violet", lwd = 8)
curve(x^-0.25, from=0, to=365, add=TRUE, col = "violet", lwd = 8)
curve(x^-0.003, from=0, to=365, add=TRUE, col = "violet", lwd = 8)
curve(x^-0, from=0, to=365, add=TRUE, col = "violet", lwd = 8)
curve(x^-0.001, from=0, to=365, add=TRUE, col = "violet", lwd = 8)
curve(x^-0.01, from=0, to=365, add=TRUE, col = "violet", lwd = 8)
curve(x^-0.04, from=0, to=365, add=TRUE, col = "violet", lwd = 8)
curve(x^-0.012, from=0, to=365, add=TRUE, col = "violet", lwd = 8)
plot(Ph3_Morella$Day, Ph3_Morella$PercMassRemaining, ylim = c(0.8,1))
curve(x^-0.012, from=0, to=365, add=TRUE, col = "violet", lwd = 8)
nls(PercMassRemaining ~ Dry_Mass + (Initial_bag_litter_mass - Dry_Mass) * exp(-alpha * Day),
data = Pi1_Pine,
start = list(alpha = 0.12))
nls(PercMassRemaining ~ Dry_Mass + (Initial_bag_litter_mass - Dry_Mass) * exp(-alpha * Day),
data = Pi1_Pine,
start = list(alpha = 0.12))
fit <- nls(PercMassRemaining ~ SSasymp(Day, Dry_Mass, Initial_bag_litter_mass, log_alpha), data = Pi1_Pine)
log_alpha
library(tidyverse)
library(broom)
t = 1:100
y1 = 22 + (53 - 22) * exp(-0.02 * t) %>% jitter(10)
y2 = 24 + (60 - 24) * exp(-0.01 * t) %>% jitter(10)
df <- tibble(t = t, y = y1, sensor = 'sensor1') %>%
rbind(. , data.frame(t = t, y = y2, sensor = 'sensor2'))
sensor1 <- df %>% filter(sensor == 'sensor1')
nls(y ~ yf + (y0 - yf) * exp(-alpha * t),
data = sensor1,
start = list(y0 = 54, yf = 25, alpha = 1))
fit
fit <- nls(y ~ SSasymp(t, yf, y0, log_alpha), data = sensor1)
fit
plot(Ph3_Morella$Day, Ph3_Morella$PercMassRemaining, ylim = c(0.8,1))
nls(PercMassRemaining ~ Dry_Mass + (Initial_bag_litter_mass - Dry_Mass) * exp(-alpha * Day),
data = Pi1_Pine,
start = list(alpha = 0.12))
fit <- nls(PercMassRemaining ~ SSasymp(Day, Dry_Mass, Initial_bag_litter_mass, log_alpha), data = Pi1_Pine)
Data$PercMassInitial <- Data$Initial_bag_litter_mass/Data$Initial_bag_litter_mass
View(Data)
Data$SiteLitterCombo <- interaction(as.factor(Data$Site), as.factor(Data$Litter.type))
#merging site name to Data file so that we can stratify curves later
Data <- merge(Data, Data_bysite, by = "Tag")
#creating boxplot of all data points to check for outliers.
boxplot(Data$Mass.Loss, outlier.tagging = TRUE)
#just for fun...
boxplot(Data$Mass.Loss ~ Data$Day)
boxplot(Data$Mass.Loss ~ Data$treatment)
nls(PercMassRemaining ~ Dry_Mass + (Initial_bag_litter_mass - Dry_Mass) * exp(-alpha * Day),
data = Pi1_Pine,
start = list(alpha = 0.12))
fit <- nls(PercMassRemaining ~ SSasymp(Day, PercMassRemaining, PercMassInitial, log_alpha), data = Pi1_Pine)
Data_bysite = Data_bysite[,c(1,4)]
Data$PercMassRemaining <- Data$Dry_Mass/Data$`Initial_bag_litter_mass`
Data$PercMassInitial <- Data$Initial_bag_litter_mass/Data$Initial_bag_litter_mass
Data$SiteLitterCombo <- interaction(as.factor(Data$Site), as.factor(Data$Litter.type))
#merging site name to Data file so that we can stratify curves later
Data <- merge(Data, Data_bysite, by = "Tag")
#creating boxplot of all data points to check for outliers.
boxplot(Data$Mass.Loss, outlier.tagging = TRUE)
#just for fun...
boxplot(Data$Mass.Loss ~ Data$Day)
boxplot(Data$Mass.Loss ~ Data$treatment)
nls(PercMassRemaining ~ Dry_Mass + (Initial_bag_litter_mass - Dry_Mass) * exp(-alpha * Day),
data = Pi1_Pine,
start = list(alpha = 0.12))
fit <- nls(Mass.Loss ~ SSasymp(Day, k), data = Pi1_Pine)
fit <- nls(PercMassRemaining ~ SSasymp(Day, PercMassRemaining, PercMassInitial, log_alpha), data = Pi1_Pine)
#finding a curve alpha manually
Pi1_Pine <- Data %>% filter(SiteLitterCombo == 'Pi1.Pine')
#finding a curve alpha manually
Pi1_Pine <- Data %>% filter(SiteLitterCombo == 'Pi1.Pine')
Pi1_Phrag <- Data %>% filter(SiteLitterCombo == 'Pi1.Phragmites')
Pi1_Morella <- Data %>% filter(SiteLitterCombo == 'Pi1.Morella')
Pi2_Pine <- Data %>% filter(SiteLitterCombo == 'Pi2.Pine')
Pi2_Phrag <- Data %>% filter(SiteLitterCombo == 'Pi2.Phragmites')
Pi2_Morella <- Data %>% filter(SiteLitterCombo == 'Pi2.Morella')
Pi3_Pine <- Data %>% filter(SiteLitterCombo == 'Pi3.Pine')
Pi3_Phrag <- Data %>% filter(SiteLitterCombo == 'Pi3.Phragmites')
Pi3_Morella <- Data %>% filter(SiteLitterCombo == 'Pi3.Morella')
Mo1_Pine <- Data %>% filter(SiteLitterCombo == 'Mo1.Pine')
Mo1_Phrag <- Data %>% filter(SiteLitterCombo == 'Mo1.Phragmites')
Mo1_Morella <- Data %>% filter(SiteLitterCombo == 'Mo1.Morella')
Mo2_Pine <- Data %>% filter(SiteLitterCombo == 'Mo2.Pine')
Mo2_Phrag <- Data %>% filter(SiteLitterCombo == 'Mo2.Phragmites')
Mo2_Morella <- Data %>% filter(SiteLitterCombo == 'Mo2.Morella')
Mo3_Pine <- Data %>% filter(SiteLitterCombo == 'Mo3.Pine')
Mo3_Phrag <- Data %>% filter(SiteLitterCombo == 'Mo3.Phragmites')
Mo3_Morella <- Data %>% filter(SiteLitterCombo == 'Mo3.Morella')
Ph1_Pine <- Data %>% filter(SiteLitterCombo == 'Ph1.Pine')
Ph1_Phrag <- Data %>% filter(SiteLitterCombo == 'Ph1.Phragmites')
Ph1_Morella <- Data %>% filter(SiteLitterCombo == 'Ph1.Morella')
Ph2_Pine <- Data %>% filter(SiteLitterCombo == 'Ph2.Pine')
Ph2_Phrag <- Data %>% filter(SiteLitterCombo == 'Ph2.Phragmites')
Ph2_Morella <- Data %>% filter(SiteLitterCombo == 'Ph2.Morella')
Ph3_Pine <- Data %>% filter(SiteLitterCombo == 'Ph3.Pine')
Ph3_Phrag <- Data %>% filter(SiteLitterCombo == 'Ph3.Phragmites')
Ph3_Morella <- Data %>% filter(SiteLitterCombo == 'Ph3.Morella')
nls(PercMassRemaining ~ Dry_Mass + (Initial_bag_litter_mass - Dry_Mass) * exp(-alpha * Day),
data = Pi1_Pine,
start = list(alpha = 0.12))
fit <- nls(Mass.Loss ~ SSasymp(Day, k), data = Pi1_Pine)
fit <- nls(PercMassRemaining ~ SSasymp(Day, PercMassRemaining, PercMassInitial, log_alpha), data = Pi1_Pine)
View(Pi1_Pine)
fit <- nls(PercMassRemaining ~ SSasymp(Day, PercMassRemaining, PercMassInitial, log_alpha), data = Pi1_Pine)
fit <- nls(PercMassRemaining ~ SSasymp(Day, PercMassRemaining, PercMassInitial, log_alpha), data = Pi1_Pine)
df <- tibble(t = t, y = y1, sensor = 'sensor1') %>%
rbind(. , data.frame(t = t, y = y2, sensor = 'sensor2'))
df <- tibble(t = t, y = y1, sensor = 'sensor1') %>%
rbind(. , data.frame(t = t, y = y2, sensor = 'sensor2'))
df <- tibble(t = t, y = y1, sensor = 'sensor1') %>%
rbind(. , data.frame(t = t, y = y2, sensor = 'sensor2'))
sensor1 <- df %>% filter(sensor == 'sensor1')
nls(y ~ yf + (y0 - yf) * exp(-alpha * t),
data = sensor1,
start = list(y0 = 54, yf = 25, alpha = 1))
fit <- nls(y ~ SSasymp(t, yf, y0, log_alpha), data = sensor1)
nls(y ~ Dry_Mass + (Initial_bag_litter_mass - Dry_Mass) * exp(-alpha * Day),
data = Pi1_Pine,
start = list(alpha = 0.12))
nls(y ~ Dry_Mass + (Initial_bag_litter_mass - Dry_Mass) * exp(-alpha * Day),
data = Pi1_Pine,
start = list(alpha = 0.12))
View(df)
plot(Pi1_Pine$Day, Pi1_Pine$PercMassRemaining)
nls(y ~ yf + (y0 - yf) * exp(-alpha * Day),
data = Pi1_Pine,
start = list(y0 = 1, yf = 0.96, alpha = -0.008))
nls(y ~ yf + (y0 - yf) * exp(-alpha * Day),
data = Pi1_Pine,
start = list(y0 = 1, yf = 0.96, alpha = 0.008))
nls(PercMassRemaining ~ yf + (y0 - yf) * exp(-alpha * Day),
data = Pi1_Pine,
start = list(y0 = 1, yf = 0.96, alpha = 0.008))
fit <- nls(PercMassRemaining ~ SSasymp(Day, y0, yf, log_alpha), data = Pi1_Pine)
fit <- nls(PercMassRemaining ~ SSasymp(Day, yf, y0, log_alpha), data = Pi1_Pine)
fit <- nls(PercMassRemaining ~ SSasymp(Day, yf, y0, log_alpha), data = Pi1_Pine)
echo "# DecompProject" >> README.md
#setup
install.packages("tidyverse")
library(dplyr)
library(broom)
#setting working directory on my computer
setwd("/Users/noashapiro-tamir/Desktop/R_Files/DecompProject")
#Importing data
Data <- read.csv("Decomp_Data_Edited_Noa_Raw_1.csv")
Data_bysite <- read.csv("Decomp_Data_Edited_Noa_Site_Contents_3.csv")
#Cleaning data to prep for merging
colnames (Data)[1] <- "Tag"
colnames (Data)[5] <- "Initial_bag_mass"
colnames (Data)[6] <- "Initial_litter_mass"
colnames (Data)[7] <- "Initial_bag_litter_mass"
colnames (Data)[8] <- "Dry_Mass"
colnames (Data)[10] <- "Day"
colnames (Data_bysite)[4] <- "Tag"
Data_bysite = Data_bysite[,c(1,4)]
Data$PercMassRemaining <- Data$Dry_Mass/Data$`Initial_bag_litter_mass`
Data$PercMassInitial <- Data$Initial_bag_litter_mass/Data$Initial_bag_litter_mass
Data$SiteLitterCombo <- interaction(as.factor(Data$Site), as.factor(Data$Litter.type))
#merging site name to Data file so that we can stratify curves later
Data <- merge(Data, Data_bysite, by = "Tag")
#creating boxplot of all data points to check for outliers.
boxplot(Data$Mass.Loss, outlier.tagging = TRUE)
#just for fun...
boxplot(Data$Mass.Loss ~ Data$Day)
boxplot(Data$Mass.Loss ~ Data$treatment)
nls(PercMassRemaining ~ yf + (y0 - yf) * exp(-alpha * Day),
data = Pi1_Pine,
start = list(y0 = 1, yf = 0.96, alpha = 0.008))
fit <- nls(PercMassRemaining ~ SSasymp(Day, yf, y0, log_alpha), data = Pi1_Pine)
fit <- nls(PercMassRemaining ~ SSasymp(Day, yf, y0, log_alpha), data = Pi1_Pine)
nls(PercMassRemaining ~ PercMassRemaining + (PercMassInitial - PercMassRemaining) * exp(-alpha * Day),
data = Pi1_Pine,
start = list(y0 = 1, yf = 0.96, alpha = 0.008))
fit <- nls(PercMassRemaining ~ SSasymp(Day, PercMassRemaining, PercMassInitial, log_alpha), data = Pi1_Pine)
fit <- nls(Pi1_Pine$PercMassRemaining ~ SSasymp(Pi1_Pine$Day, Pi1_Pine$PercMassRemaining, Pi1_Pine$PercMassInitial, log_alpha))
install.packages("stats")
library(stats)
fit <- nls(Pi1_Pine$PercMassRemaining ~ SSasymp(Pi1_Pine$Day, Pi1_Pine$PercMassRemaining, Pi1_Pine$PercMassInitial, log_alpha))
fit <- nls(PercMassRemaining ~ SSasymp(Day, PercMassRemaining, PercMassInitial, log_alpha), data = Pi1_Pine)
# Fit the data
fitted <- Data %>%
nest(-SiteLitterCombo) %>%
mutate(
fit = map(Data, ~nls(PercMassRemaining ~ SSasymp(Day, PercMassRemaining, PercMassInitial, log_alpha), data = .)),
tidied = map(fit, tidy),
augmented = map(fit, augment),
)
View(Data)
#Cleaning data to prep for merging
colnames (Data)[1] <- "Tag"
colnames (Data)[5] <- "Initial_bag_mass"
colnames (Data)[6] <- "Initial_litter_mass"
colnames (Data)[7] <- "Initial_bag_litter_mass"
colnames (Data)[8] <- "Dry_Mass"
colnames (Data)[10] <- "Day"
colnames (Data_bysite)[4] <- "Tag"
Data_bysite = Data_bysite[,c(1,4)]
Data$PercMassRemaining <- Data$Dry_Mass/Data$`Initial_bag_litter_mass`
Data$PercMassInitial <- Data$Initial_bag_litter_mass/Data$Initial_bag_litter_mass
Data$SiteLitterCombo <- interaction(as.factor(Data$Site), as.factor(Data$Litter.type))
# Fit the data
fitted <- Data %>%
nest(-SiteLitterCombo) %>%
mutate(
fit = map(Data, ~nls(PercMassRemaining ~ SSasymp(Day, PercMassRemaining, PercMassInitial, log_alpha), data = .)),
tidied = map(fit, tidy),
augmented = map(fit, augment),
)
# Fit the data
fitted <- Data %>%
nest(SiteLitterCombo) %>%
mutate(
fit = map(Data, ~nls(PercMassRemaining ~ SSasymp(Day, PercMassRemaining, PercMassInitial, log_alpha), data = .)),
tidied = map(fit, tidy),
augmented = map(fit, augment),
)
# Fit the data
fitted <- Data %>%
nest(SiteLitterCombo) %>%
mutate(
fit = map(Data, ~nls(PercMassRemaining ~ SSasymp(Day, PercMassRemaining, PercMassInitial, log_alpha))),
tidied = map(fit, tidy),
augmented = map(fit, augment),
)
rlang::last_trace()
# Fit the data
fitted <- Data %>%
nest(SiteLitterCombo) %>%
mutate(
fit = map(Data, ~nls(y ~ SSasymp(Day, PercMassRemaining, PercMassInitial, log_alpha))),
tidied = map(fit, tidy),
augmented = map(fit, augment),
)
# Fit the data
fitted <- Data %>%
nest(SiteLitterCombo) %>%
mutate(
fit = map(Data, ~nls(PercMassRemaining ~ SSasymp(Day, PercMassRemaining, PercMassInitial, log_alpha))),
tidied = map(fit, tidy),
augmented = map(fit, augment),
)
Data$Years <- Data$Day/365
View(Data)
fit <- nls(PercMassRemaining ~ SSasymp(Years, PercMassRemaining, PercMassInitial, log_alpha), data = Pi1_Pine)
nls(PercMassRemaining ~ PercMassRemaining + (PercMassInitial - PercMassRemaining) * exp(-alpha * Years),
data = Pi1_Pine,
start = list(y0 = 1, yf = 0.96, alpha = 0.008))
nls(PercMassRemaining ~ PercMassRemaining + (PercMassInitial - PercMassRemaining) * exp(-alpha * Years),
data = Pi1_Pine,
start = list(y0 = 1, yf = 0.96, alpha = 0.008))
nls(PercMassRemaining ~ PercMassRemaining + (PercMassInitial - PercMassRemaining) * exp(-alpha * Day),
data = Pi1_Pine,
start = list(y0 = 1, yf = 0.96, alpha = 0.008))
nls(PercMassRemaining ~ PercMassRemaining + (PercMassInitial - PercMassRemaining) * exp(-alpha * Day),
data = Pi1_Pine,
start = list(y0 = 1, yf = 0.96, alpha = 0.008))
fit <- nls(PercMassRemaining ~ SSasymp(Day, PercMassRemaining, PercMassInitial, log_alpha), data = Pi1_Pine)
View(Data_bysite)
plot(Data$PercMassRemaining, Data$Day)
boxplot(Data$PercMassRemaining, Data$Day)
plot(Data$PercMassRemaining, Data$Day, type = l)
plot(Data$PercMassRemaining, Data$Day, type = "l")
plot(Data$Day, Data$PercMassRemaining, type = "l")
View(Data)
#creating boxplot of all data points to check for outliers.
boxplot(Data$Mass.Loss, Data$SiteLitterCombo, outlier.tagging = TRUE)
plot(Data$Day ~ Data$PercMassRemaining)
plot(Data$PercMassRemaining ~ Data$Day)
plot(Data$PercMassRemaining ~ Data$Day, col =treatment )
plot(Data$PercMassRemaining ~ Data$Day, color =treatment )
plot(Data$PercMassRemaining ~ Data$Day, color =Data$treatment )
plot(Data$PercMassRemaining ~ Data$Day, col =Data$treatment )
ggplot(Data, aes(x = Day, y = PercMassRemaining, group = treatment))
ggplot(Data, aes(x = Day, y = PercMassRemaining, group = treatment))+
geom_point()
ggplot(Data, aes(x = Day, y = PercMassRemaining, color = treatment))+
geom_point()
ggplot(Data, aes(x = Day, y = PercMassRemaining, color = Litter.type))+
geom_point()
